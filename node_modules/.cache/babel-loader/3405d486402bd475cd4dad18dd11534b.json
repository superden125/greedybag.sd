{"ast":null,"code":"function sort(items) {\n  for (var i = 0; i < items.length - 2; i++) {\n    for (var j = items.length - 1; j >= i + 1; j--) {\n      var t1 = items[j].value / items[j].weight;\n      var t2 = items[j - 1].value / items[j - 1].weight;\n\n      if (t1 > t2) {\n        [items[j], items[j - 1]] = [items[j - 1], items[j]];\n      }\n    }\n  }\n}\n\nfunction greedy1(items, weight) {\n  // const items = [...itemsList];\n  // sort(items);\n  // const items = itemsList.slice().sort((a, b) => {\n  //   return b.value / b.weight - a.value / a.weight;\n  // });\n  items.forEach(item => {\n    item.qty = parseInt(weight / item.weight);\n    weight -= item.qty * item.weight;\n  });\n  return items;\n}\n\nfunction greedy2(items, weight) {\n  // const items = [...itemsList];\n  // sort(items);\n  // const items = itemsList.slice().sort((a, b) => {\n  //   return b.value / b.weight - a.value / a.weight;\n  // });\n  items.forEach(item => {\n    item.qty = parseInt(weight / item.weight);\n\n    if (item.qty > item.stock) {\n      item.qty = item.stock;\n    }\n\n    weight -= item.qty * item.weight;\n  });\n  return items;\n}\n\nfunction greedy3(items, weight) {\n  // const items = [...itemsList];\n  // sort(items);\n  // const items = itemsList.slice().sort((a, b) => {\n  //   return b.value / b.weight - a.value / a.weight;\n  // });\n  items.forEach(item => {\n    item.qty = parseInt(weight / item.weight);\n\n    if (item.qty > 1) {\n      item.qty = 1;\n    }\n\n    weight -= item.qty * item.weight;\n  });\n  return items;\n}\n\nconst greedy = (itemsList, type, weight) => {\n  const items = [...itemsList];\n  sort(items);\n  console.log(items); // switch (type) {\n  //   case 1:\n  //     greedy1(items, weight);\n  //     break;\n  //   case 2:\n  //     greedy2(items, weight);\n  //     break;\n  //   case 3:\n  //     greedy3(items, weight);\n  //     break;\n  // }\n};\n\nexport { greedy };","map":{"version":3,"sources":["/home/sd/HK1-2020-2021/NLCS/balo/demo2/src/greedy.js"],"names":["sort","items","i","length","j","t1","value","weight","t2","greedy1","forEach","item","qty","parseInt","greedy2","stock","greedy3","greedy","itemsList","type","console","log"],"mappings":"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","sourcesContent":["function sort(items) {\n  for (var i = 0; i < items.length - 2; i++) {\n    for (var j = items.length - 1; j >= i + 1; j--) {\n      var t1 = items[j].value / items[j].weight;\n      var t2 = items[j - 1].value / items[j - 1].weight;\n\n      if (t1 > t2) {\n        [items[j], items[j - 1]] = [items[j - 1], items[j]];\n      }\n    }\n  }\n}\n\nfunction greedy1(items, weight) {\n  // const items = [...itemsList];\n  // sort(items);\n\n  // const items = itemsList.slice().sort((a, b) => {\n  //   return b.value / b.weight - a.value / a.weight;\n  // });\n\n  items.forEach((item) => {\n    item.qty = parseInt(weight / item.weight);\n    weight -= item.qty * item.weight;\n  });\n  return items;\n}\n\nfunction greedy2(items, weight) {\n  // const items = [...itemsList];\n  // sort(items);\n\n  // const items = itemsList.slice().sort((a, b) => {\n  //   return b.value / b.weight - a.value / a.weight;\n  // });\n\n  items.forEach((item) => {\n    item.qty = parseInt(weight / item.weight);\n    if (item.qty > item.stock) {\n      item.qty = item.stock;\n    }\n    weight -= item.qty * item.weight;\n  });\n  return items;\n}\n\nfunction greedy3(items, weight) {\n  // const items = [...itemsList];\n  // sort(items);\n\n  // const items = itemsList.slice().sort((a, b) => {\n  //   return b.value / b.weight - a.value / a.weight;\n  // });\n\n  items.forEach((item) => {\n    item.qty = parseInt(weight / item.weight);\n    if (item.qty > 1) {\n      item.qty = 1;\n    }\n    weight -= item.qty * item.weight;\n  });\n  return items;\n}\n\nconst greedy = (itemsList, type, weight) => {\n  const items = [...itemsList];\n  sort(items);\n  console.log(items);\n  // switch (type) {\n  //   case 1:\n  //     greedy1(items, weight);\n  //     break;\n  //   case 2:\n  //     greedy2(items, weight);\n  //     break;\n  //   case 3:\n  //     greedy3(items, weight);\n  //     break;\n  // }\n};\n\nexport { greedy };\n"]},"metadata":{},"sourceType":"module"}