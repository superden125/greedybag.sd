{"ast":null,"code":"var _jsxFileName = \"/home/sd/HK1-2020-2021/NLCS/balo/demo2/src/components/Items/InputFile.js\";\nimport React from \"react\";\nimport { Input } from \"reactstrap\";\nexport default function InputFile(props) {\n  const {\n    setWeightFile,\n    setItemsFile\n  } = props;\n\n  const readFile = e => {\n    if (e !== undefined) {\n      console.log(e.target.files[0]);\n\n      if (e.target.files[0] !== undefined) {\n        e.preventDefault();\n        const items = [];\n        const reader = new FileReader();\n\n        reader.onload = async e => {\n          const text = e.target.result.split(/\\r\\n|\\n/);\n          setWeightFile(parseInt(text[0]));\n          text.forEach((line, index) => {\n            //console.log(line);\n            if (index !== 0) {\n              const cell = line.split(\" \");\n              const stock = cell[2] % 1 === 0 ? cell[2] : \"\";\n              let name = \"\";\n\n              if (stock !== \"\") {\n                cell.slice(3).forEach(t => {\n                  name += t + \" \";\n                });\n              } else {\n                cell.slice(2).forEach(t => {\n                  name += t + \" \";\n                });\n              }\n\n              items.push({\n                name: name.trim(),\n                value: cell[0],\n                weight: cell[1],\n                stock: stock,\n                qty: \"\",\n                time: \"\"\n              });\n            }\n          });\n          setItemsFile(items);\n        };\n\n        reader.readAsText(e.target.files[0]);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Choose your file\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"file\",\n    name: \"file\",\n    onChange: e => readFile(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/sd/HK1-2020-2021/NLCS/balo/demo2/src/components/Items/InputFile.js"],"names":["React","Input","InputFile","props","setWeightFile","setItemsFile","readFile","e","undefined","console","log","target","files","preventDefault","items","reader","FileReader","onload","text","result","split","parseInt","forEach","line","index","cell","stock","name","slice","t","push","trim","value","weight","qty","time","readAsText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,YAAtB;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACvC,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAAkCF,KAAxC;;AAEA,QAAMG,QAAQ,GAAIC,CAAD,IAAO;AACtB,QAAIA,CAAC,KAAKC,SAAV,EAAqB;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,CAAZ;;AACA,UAAIL,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,MAAsBJ,SAA1B,EAAqC;AACnCD,QAAAA,CAAC,CAACM,cAAF;AACA,cAAMC,KAAK,GAAG,EAAd;AACA,cAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AAEAD,QAAAA,MAAM,CAACE,MAAP,GAAgB,MAAOV,CAAP,IAAa;AAC3B,gBAAMW,IAAI,GAAGX,CAAC,CAACI,MAAF,CAASQ,MAAT,CAAgBC,KAAhB,CAAsB,SAAtB,CAAb;AACAhB,UAAAA,aAAa,CAACiB,QAAQ,CAACH,IAAI,CAAC,CAAD,CAAL,CAAT,CAAb;AACAA,UAAAA,IAAI,CAACI,OAAL,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC5B;AACA,gBAAIA,KAAK,KAAK,CAAd,EAAiB;AACf,oBAAMC,IAAI,GAAGF,IAAI,CAACH,KAAL,CAAW,GAAX,CAAb;AAEA,oBAAMM,KAAK,GAAGD,IAAI,CAAC,CAAD,CAAJ,GAAU,CAAV,KAAgB,CAAhB,GAAoBA,IAAI,CAAC,CAAD,CAAxB,GAA8B,EAA5C;AACA,kBAAIE,IAAI,GAAG,EAAX;;AACA,kBAAID,KAAK,KAAK,EAAd,EAAkB;AAChBD,gBAAAA,IAAI,CAACG,KAAL,CAAW,CAAX,EAAcN,OAAd,CAAuBO,CAAD,IAAO;AAC3BF,kBAAAA,IAAI,IAAIE,CAAC,GAAG,GAAZ;AACD,iBAFD;AAGD,eAJD,MAIO;AACLJ,gBAAAA,IAAI,CAACG,KAAL,CAAW,CAAX,EAAcN,OAAd,CAAuBO,CAAD,IAAO;AAC3BF,kBAAAA,IAAI,IAAIE,CAAC,GAAG,GAAZ;AACD,iBAFD;AAGD;;AACDf,cAAAA,KAAK,CAACgB,IAAN,CAAW;AACTH,gBAAAA,IAAI,EAAEA,IAAI,CAACI,IAAL,EADG;AAETC,gBAAAA,KAAK,EAAEP,IAAI,CAAC,CAAD,CAFF;AAGTQ,gBAAAA,MAAM,EAAER,IAAI,CAAC,CAAD,CAHH;AAITC,gBAAAA,KAAK,EAAEA,KAJE;AAKTQ,gBAAAA,GAAG,EAAE,EALI;AAMTC,gBAAAA,IAAI,EAAE;AANG,eAAX;AAQD;AACF,WAzBD;AA2BA9B,UAAAA,YAAY,CAACS,KAAD,CAAZ;AACD,SA/BD;;AAgCAC,QAAAA,MAAM,CAACqB,UAAP,CAAkB7B,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,CAAlB;AACD;AACF;AACF,GA3CD;;AA6CA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAA+B,IAAA,QAAQ,EAAGL,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD","sourcesContent":["import React from \"react\";\nimport { Input } from \"reactstrap\";\n\nexport default function InputFile(props) {\n  const { setWeightFile, setItemsFile } = props;\n\n  const readFile = (e) => {\n    if (e !== undefined) {\n      console.log(e.target.files[0]);\n      if (e.target.files[0] !== undefined) {\n        e.preventDefault();\n        const items = [];\n        const reader = new FileReader();\n\n        reader.onload = async (e) => {\n          const text = e.target.result.split(/\\r\\n|\\n/);\n          setWeightFile(parseInt(text[0]));\n          text.forEach((line, index) => {\n            //console.log(line);\n            if (index !== 0) {\n              const cell = line.split(\" \");\n\n              const stock = cell[2] % 1 === 0 ? cell[2] : \"\";\n              let name = \"\";\n              if (stock !== \"\") {\n                cell.slice(3).forEach((t) => {\n                  name += t + \" \";\n                });\n              } else {\n                cell.slice(2).forEach((t) => {\n                  name += t + \" \";\n                });\n              }\n              items.push({\n                name: name.trim(),\n                value: cell[0],\n                weight: cell[1],\n                stock: stock,\n                qty: \"\",\n                time: \"\",\n              });\n            }\n          });\n\n          setItemsFile(items);\n        };\n        reader.readAsText(e.target.files[0]);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Label>Choose your file</Label>\n      <Input type=\"file\" name=\"file\" onChange={(e) => readFile(e)} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}