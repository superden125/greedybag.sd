{"ast":null,"code":"import _regeneratorRuntime from\"/home/sd/HK1-2020-2021/NLCS/balo/demo2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/sd/HK1-2020-2021/NLCS/balo/demo2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useState}from\"react\";import{FormGroup,Input,Label}from\"reactstrap\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";export default function InputFile(props){var setFileNames=props.setFileNames,fileNames=props.fileNames,setIsLoading=props.setIsLoading,setInputFile=props.setInputFile,disabled=props.disabled;var readFile=function readFile(e){if(e!==undefined){if(e.target.files[0]!==undefined){e.preventDefault();var items=[];var reader=new FileReader();setFileNames(e.target.files[0].name);reader.onload=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var text,weight;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setIsLoading(true);text=e.target.result.split(/\\r\\n|\\n/);//setWeightFile(parseInt(text[0]));\nweight=parseInt(text[0]);text.forEach(function(line,index){//console.log(line);\nif(index!==0){var cell=line.split(\" \");var stock=cell[2]%1===0?cell[2]:\"\";var name=\"\";if(stock!==\"\"){cell.slice(3).forEach(function(t){name+=t+\" \";});}else{cell.slice(2).forEach(function(t){name+=t+\" \";});}items.push({name:name.trim(),value:cell[0],weight:cell[1],stock:stock,qty:\"\",time:\"\"});}});//setItemsFile(items);\nsetInputFile(weight,items);setIsLoading(false);case 6:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();reader.readAsText(e.target.files[0]);}}};return/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(\"legend\",null,\"File\"),/*#__PURE__*/React.createElement(Label,{for:\"file\",className:\"sd-file-choose btn btn-primary\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:\"file-upload\"}),\" Upload\"),/*#__PURE__*/React.createElement(Input,{type:\"file\",name:\"file\",id:\"file\",onChange:function onChange(e){return readFile(e);},style:{display:\"none\"},disabled:disabled}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Label,null,fileNames));}","map":{"version":3,"sources":["/home/sd/HK1-2020-2021/NLCS/balo/demo2/src/components/Items/InputFile.js"],"names":["React","useState","FormGroup","Input","Label","FontAwesomeIcon","InputFile","props","setFileNames","fileNames","setIsLoading","setInputFile","disabled","readFile","e","undefined","target","files","preventDefault","items","reader","FileReader","name","onload","text","result","split","weight","parseInt","forEach","line","index","cell","stock","slice","t","push","trim","value","qty","time","readAsText","display"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { FormGroup, Input, Label } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default function InputFile(props) {\n  const {\n    setFileNames,\n    fileNames,\n    setIsLoading,\n    setInputFile,\n    disabled,\n  } = props;\n\n  const readFile = (e) => {\n    if (e !== undefined) {\n      if (e.target.files[0] !== undefined) {\n        e.preventDefault();\n        const items = [];\n        const reader = new FileReader();\n\n        setFileNames(e.target.files[0].name);\n        reader.onload = async (e) => {\n          setIsLoading(true);\n          const text = e.target.result.split(/\\r\\n|\\n/);\n          //setWeightFile(parseInt(text[0]));\n          let weight = parseInt(text[0]);\n          text.forEach((line, index) => {\n            //console.log(line);\n            if (index !== 0) {\n              const cell = line.split(\" \");\n\n              const stock = cell[2] % 1 === 0 ? cell[2] : \"\";\n              let name = \"\";\n              if (stock !== \"\") {\n                cell.slice(3).forEach((t) => {\n                  name += t + \" \";\n                });\n              } else {\n                cell.slice(2).forEach((t) => {\n                  name += t + \" \";\n                });\n              }\n              items.push({\n                name: name.trim(),\n                value: cell[0],\n                weight: cell[1],\n                stock: stock,\n                qty: \"\",\n                time: \"\",\n              });\n            }\n          });\n\n          //setItemsFile(items);\n          setInputFile(weight, items);\n          setIsLoading(false);\n        };\n\n        reader.readAsText(e.target.files[0]);\n      }\n    }\n  };\n\n  return (\n    <FormGroup>\n      <legend>File</legend>\n      <Label for=\"file\" className=\"sd-file-choose btn btn-primary\">\n        <FontAwesomeIcon icon=\"file-upload\" /> Upload\n      </Label>\n      <Input\n        type=\"file\"\n        name=\"file\"\n        id=\"file\"\n        onChange={(e) => readFile(e)}\n        style={{ display: \"none\" }}\n        disabled={disabled}\n      />\n      <br></br>\n      <Label>{fileNames}</Label>\n    </FormGroup>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}