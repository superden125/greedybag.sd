{"ast":null,"code":"var _jsxFileName = \"/home/sd/HK1-2020-2021/NLCS/balo/demo2/src/components/Items/InputFile.js\";\nimport React, { useState } from \"react\";\nimport { FormGroup, Input, Label } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nexport default function InputFile(props) {\n  const {\n    setWeightFile,\n    setItemsFile,\n    setFileNames,\n    fileNames,\n    setIsLoading,\n    clearItem\n  } = props;\n\n  const readFile = e => {\n    if (e !== undefined) {\n      if (e.target.files[0] !== undefined) {\n        clearItem();\n        e.preventDefault();\n        const items = [];\n        const reader = new FileReader();\n        setFileNames(e.target.files[0].name);\n\n        reader.onload = async e => {\n          setIsLoading(true);\n          const text = e.target.result.split(/\\r\\n|\\n/);\n          setWeightFile(parseInt(text[0]));\n          text.forEach((line, index) => {\n            //console.log(line);\n            if (index !== 0) {\n              const cell = line.split(\" \");\n              const stock = cell[2] % 1 === 0 ? cell[2] : \"\";\n              let name = \"\";\n\n              if (stock !== \"\") {\n                cell.slice(3).forEach(t => {\n                  name += t + \" \";\n                });\n              } else {\n                cell.slice(2).forEach(t => {\n                  name += t + \" \";\n                });\n              }\n\n              items.push({\n                name: name.trim(),\n                value: cell[0],\n                weight: cell[1],\n                stock: stock,\n                qty: \"\",\n                time: \"\"\n              });\n            }\n          });\n          setItemsFile(items);\n          setIsLoading(false);\n        };\n\n        reader.readAsText(e.target.files[0]);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"File\"), /*#__PURE__*/React.createElement(Label, {\n    for: \"file\",\n    className: \"sd-file-choose btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"file-upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), \" Upload\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"file\",\n    name: \"file\",\n    id: \"file\",\n    onChange: e => readFile(e),\n    style: {\n      display: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, fileNames));\n}","map":{"version":3,"sources":["/home/sd/HK1-2020-2021/NLCS/balo/demo2/src/components/Items/InputFile.js"],"names":["React","useState","FormGroup","Input","Label","FontAwesomeIcon","InputFile","props","setWeightFile","setItemsFile","setFileNames","fileNames","setIsLoading","clearItem","readFile","e","undefined","target","files","preventDefault","items","reader","FileReader","name","onload","text","result","split","parseInt","forEach","line","index","cell","stock","slice","t","push","trim","value","weight","qty","time","readAsText","display"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,KAA3B,QAAwC,YAAxC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACvC,QAAM;AACJC,IAAAA,aADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,SAJI;AAKJC,IAAAA,YALI;AAMJC,IAAAA;AANI,MAOFN,KAPJ;;AASA,QAAMO,QAAQ,GAAIC,CAAD,IAAO;AACtB,QAAIA,CAAC,KAAKC,SAAV,EAAqB;AACnB,UAAID,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,MAAsBF,SAA1B,EAAqC;AACnCH,QAAAA,SAAS;AACTE,QAAAA,CAAC,CAACI,cAAF;AACA,cAAMC,KAAK,GAAG,EAAd;AACA,cAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AAEAZ,QAAAA,YAAY,CAACK,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBK,IAAnB,CAAZ;;AACAF,QAAAA,MAAM,CAACG,MAAP,GAAgB,MAAOT,CAAP,IAAa;AAC3BH,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,gBAAMa,IAAI,GAAGV,CAAC,CAACE,MAAF,CAASS,MAAT,CAAgBC,KAAhB,CAAsB,SAAtB,CAAb;AACAnB,UAAAA,aAAa,CAACoB,QAAQ,CAACH,IAAI,CAAC,CAAD,CAAL,CAAT,CAAb;AACAA,UAAAA,IAAI,CAACI,OAAL,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC5B;AACA,gBAAIA,KAAK,KAAK,CAAd,EAAiB;AACf,oBAAMC,IAAI,GAAGF,IAAI,CAACH,KAAL,CAAW,GAAX,CAAb;AAEA,oBAAMM,KAAK,GAAGD,IAAI,CAAC,CAAD,CAAJ,GAAU,CAAV,KAAgB,CAAhB,GAAoBA,IAAI,CAAC,CAAD,CAAxB,GAA8B,EAA5C;AACA,kBAAIT,IAAI,GAAG,EAAX;;AACA,kBAAIU,KAAK,KAAK,EAAd,EAAkB;AAChBD,gBAAAA,IAAI,CAACE,KAAL,CAAW,CAAX,EAAcL,OAAd,CAAuBM,CAAD,IAAO;AAC3BZ,kBAAAA,IAAI,IAAIY,CAAC,GAAG,GAAZ;AACD,iBAFD;AAGD,eAJD,MAIO;AACLH,gBAAAA,IAAI,CAACE,KAAL,CAAW,CAAX,EAAcL,OAAd,CAAuBM,CAAD,IAAO;AAC3BZ,kBAAAA,IAAI,IAAIY,CAAC,GAAG,GAAZ;AACD,iBAFD;AAGD;;AACDf,cAAAA,KAAK,CAACgB,IAAN,CAAW;AACTb,gBAAAA,IAAI,EAAEA,IAAI,CAACc,IAAL,EADG;AAETC,gBAAAA,KAAK,EAAEN,IAAI,CAAC,CAAD,CAFF;AAGTO,gBAAAA,MAAM,EAAEP,IAAI,CAAC,CAAD,CAHH;AAITC,gBAAAA,KAAK,EAAEA,KAJE;AAKTO,gBAAAA,GAAG,EAAE,EALI;AAMTC,gBAAAA,IAAI,EAAE;AANG,eAAX;AAQD;AACF,WAzBD;AA2BAhC,UAAAA,YAAY,CAACW,KAAD,CAAZ;AACAR,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,SAjCD;;AAmCAS,QAAAA,MAAM,CAACqB,UAAP,CAAkB3B,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAlB;AACD;AACF;AACF,GA/CD;;AAiDA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,MAAX;AAAkB,IAAA,SAAS,EAAC,gCAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,YAFF,eAKE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,EAAE,EAAC,MAHL;AAIE,IAAA,QAAQ,EAAGH,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAJ3B;AAKE,IAAA,KAAK,EAAE;AAAE4B,MAAAA,OAAO,EAAE;AAAX,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,eAaE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQhC,SAAR,CAbF,CADF;AAiBD","sourcesContent":["import React, { useState } from \"react\";\nimport { FormGroup, Input, Label } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default function InputFile(props) {\n  const {\n    setWeightFile,\n    setItemsFile,\n    setFileNames,\n    fileNames,\n    setIsLoading,\n    clearItem,\n  } = props;\n\n  const readFile = (e) => {\n    if (e !== undefined) {\n      if (e.target.files[0] !== undefined) {\n        clearItem();\n        e.preventDefault();\n        const items = [];\n        const reader = new FileReader();\n\n        setFileNames(e.target.files[0].name);\n        reader.onload = async (e) => {\n          setIsLoading(true);\n          const text = e.target.result.split(/\\r\\n|\\n/);\n          setWeightFile(parseInt(text[0]));\n          text.forEach((line, index) => {\n            //console.log(line);\n            if (index !== 0) {\n              const cell = line.split(\" \");\n\n              const stock = cell[2] % 1 === 0 ? cell[2] : \"\";\n              let name = \"\";\n              if (stock !== \"\") {\n                cell.slice(3).forEach((t) => {\n                  name += t + \" \";\n                });\n              } else {\n                cell.slice(2).forEach((t) => {\n                  name += t + \" \";\n                });\n              }\n              items.push({\n                name: name.trim(),\n                value: cell[0],\n                weight: cell[1],\n                stock: stock,\n                qty: \"\",\n                time: \"\",\n              });\n            }\n          });\n\n          setItemsFile(items);\n          setIsLoading(false);\n        };\n\n        reader.readAsText(e.target.files[0]);\n      }\n    }\n  };\n\n  return (\n    <FormGroup>\n      <legend>File</legend>\n      <Label for=\"file\" className=\"sd-file-choose btn btn-primary\">\n        <FontAwesomeIcon icon=\"file-upload\" /> Upload\n      </Label>\n      <Input\n        type=\"file\"\n        name=\"file\"\n        id=\"file\"\n        onChange={(e) => readFile(e)}\n        style={{ display: \"none\" }}\n      />\n      <br></br>\n      <Label>{fileNames}</Label>\n    </FormGroup>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}