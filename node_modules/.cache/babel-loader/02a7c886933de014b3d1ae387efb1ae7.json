{"ast":null,"code":"var _jsxFileName = \"/home/sd/HK1-2020-2021/NLCS/balo/demo2/src/components/TableItem.js\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Input, Table, Form as Forms, Label } from \"reactstrap\";\nimport { greedy } from \"../greedy\";\n\nfunction TableItem(props) {\n  const [items, setItems] = useState([]);\n  const [weight, setWeight] = useState({\n    value: \"\",\n    touched: false,\n    errors: \"\"\n  });\n  const [errors, setErrors] = useState([]);\n  const initItem = {\n    name: \"\",\n    value: \"\",\n    weight: \"\",\n    stock: \"\",\n    qty: \"\",\n    time: \"\"\n  }; // useEffect(() => {\n  //   console.log(errors);\n  // }, [errors]);\n\n  const addItem = () => {\n    setItems([...items, initItem]);\n    setErrors([...errors, initItem]);\n  };\n\n  const handleWeightChange = e => {\n    setWeight({ ...weight,\n      value: e.target.value,\n      errors: \"\"\n    });\n  };\n\n  const handleChange = index => e => {\n    let newArr = items.map((item, i) => {\n      if (index === i) {\n        return { ...item,\n          [e.target.name]: e.target.value\n        };\n      } else {\n        return item;\n      }\n    });\n    setItems(newArr);\n    let newErr = errors.map((error, i) => {\n      if (index === i) {\n        return { ...error,\n          [e.target.name]: \"\"\n        };\n      } else {\n        return error;\n      }\n    });\n    setErrors(newErr);\n  };\n\n  const handleBlur = index => e => {\n    if (!e.target.value) {\n      let newErr = errors.map((error, i) => {\n        if (index === i) {\n          return { ...error,\n            [e.target.name]: \"Required\"\n          };\n        } else {\n          return error;\n        }\n      });\n      setErrors(newErr);\n    }\n  };\n\n  const handleWeightBlur = e => {\n    setWeight({ ...weight,\n      touched: true\n    });\n\n    if (!e.target.value) {\n      setWeight({ ...weight,\n        errors: \"Required\"\n      });\n    }\n  };\n\n  const checkValue = () => {\n    //false: no error\n    //true: have error\n    let check = false;\n\n    if (weight.value === \"\") {\n      setWeight({ ...weight,\n        errors: \"Required\"\n      });\n      check = true;\n    }\n\n    const newErrors = [...errors];\n\n    for (var i = 0; i < items.length; i++) {\n      let error = { ...newErrors[i]\n      };\n\n      if (items[i].name === \"\") {\n        error.name = \"Required\";\n        check = true;\n      }\n\n      if (items[i].value === \"\") {\n        error.value = \"Required\";\n        check = true;\n      }\n\n      if (items[i].weight === \"\") {\n        error.weight = \"Required\";\n        check = true;\n      }\n\n      if (items[i].stock === \"\") {\n        error.stock = \"Required\";\n        check = true;\n      }\n\n      newErrors[i] = error;\n    }\n\n    setErrors(newErrors);\n    return check;\n  };\n\n  const onSubmit = () => {\n    if (!checkValue()) {\n      setItems(greedy(items, parseInt(weight.value)));\n    } //console.log(greedy(items, parseInt(weight.value)));\n\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Forms, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"weight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, \"Weight\"), /*#__PURE__*/React.createElement(Input, {\n    style: {\n      width: \"100px\"\n    },\n    type: \"number\",\n    name: \"weight\",\n    id: \"weight\",\n    value: weight.value,\n    onChange: handleWeightChange,\n    onBlur: handleWeightBlur,\n    className: weight.errors && \"is-invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }), weight.errors && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, weight.errors), /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    className: \"table-hover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      width: \"500px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, \"Value\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, \"Weight\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, \"Stock\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, \"Qty\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, items.map((item, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    id: \"name\",\n    value: item.name,\n    name: \"name\",\n    onChange: handleChange(index),\n    onBlur: handleBlur(index),\n    className: errors[index].name && \"is-invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 19\n    }\n  }), errors[index].name && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }, errors[index].name)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    value: item.value,\n    name: \"value\",\n    onChange: handleChange(index),\n    onBlur: handleBlur(index),\n    className: errors[index].value && \"is-invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 19\n    }\n  }), errors[index].value && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, errors[index].value)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    value: item.weight,\n    name: \"weight\",\n    onChange: handleChange(index),\n    onBlur: handleBlur(index),\n    className: errors[index].weight && \"is-invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 19\n    }\n  }), errors[index].weight && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  }, errors[index].weight)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    value: item.stock,\n    name: \"stock\",\n    onChange: handleChange(index),\n    onBlur: handleBlur(index),\n    className: errors[index].stock && \"is-invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 19\n    }\n  }), errors[index].stock && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 21\n    }\n  }, errors[index].stock)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    disabled: true,\n    value: item.qty,\n    name: \"qty\",\n    onChange: handleChange(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 19\n    }\n  })))))), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => addItem(),\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }, \"Add Item\"), \" \", /*#__PURE__*/React.createElement(Button, {\n    onClick: onSubmit,\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n}\n\nTableItem.propTypes = {};\nexport default TableItem;","map":{"version":3,"sources":["/home/sd/HK1-2020-2021/NLCS/balo/demo2/src/components/TableItem.js"],"names":["React","useEffect","useState","PropTypes","Button","Input","Table","Form","Forms","Label","greedy","TableItem","props","items","setItems","weight","setWeight","value","touched","errors","setErrors","initItem","name","stock","qty","time","addItem","handleWeightChange","e","target","handleChange","index","newArr","map","item","i","newErr","error","handleBlur","handleWeightBlur","checkValue","check","newErrors","length","onSubmit","parseInt","width","propTypes"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Input, Table, Form as Forms, Label } from \"reactstrap\";\n\nimport { greedy } from \"../greedy\";\n\nfunction TableItem(props) {\n  const [items, setItems] = useState([]);\n  const [weight, setWeight] = useState({\n    value: \"\",\n    touched: false,\n    errors: \"\",\n  });\n  const [errors, setErrors] = useState([]);\n\n  const initItem = {\n    name: \"\",\n    value: \"\",\n    weight: \"\",\n    stock: \"\",\n    qty: \"\",\n    time: \"\",\n  };\n\n  // useEffect(() => {\n  //   console.log(errors);\n  // }, [errors]);\n\n  const addItem = () => {\n    setItems([...items, initItem]);\n    setErrors([...errors, initItem]);\n  };\n\n  const handleWeightChange = (e) => {\n    setWeight({ ...weight, value: e.target.value, errors: \"\" });\n  };\n\n  const handleChange = (index) => (e) => {\n    let newArr = items.map((item, i) => {\n      if (index === i) {\n        return { ...item, [e.target.name]: e.target.value };\n      } else {\n        return item;\n      }\n    });\n    setItems(newArr);\n\n    let newErr = errors.map((error, i) => {\n      if (index === i) {\n        return { ...error, [e.target.name]: \"\" };\n      } else {\n        return error;\n      }\n    });\n    setErrors(newErr);\n  };\n\n  const handleBlur = (index) => (e) => {\n    if (!e.target.value) {\n      let newErr = errors.map((error, i) => {\n        if (index === i) {\n          return { ...error, [e.target.name]: \"Required\" };\n        } else {\n          return error;\n        }\n      });\n      setErrors(newErr);\n    }\n  };\n  const handleWeightBlur = (e) => {\n    setWeight({ ...weight, touched: true });\n    if (!e.target.value) {\n      setWeight({ ...weight, errors: \"Required\" });\n    }\n  };\n\n  const checkValue = () => {\n    //false: no error\n    //true: have error\n    let check = false;\n    if (weight.value === \"\") {\n      setWeight({ ...weight, errors: \"Required\" });\n      check = true;\n    }\n    const newErrors = [...errors];\n\n    for (var i = 0; i < items.length; i++) {\n      let error = { ...newErrors[i] };\n      if (items[i].name === \"\") {\n        error.name = \"Required\";\n        check = true;\n      }\n      if (items[i].value === \"\") {\n        error.value = \"Required\";\n        check = true;\n      }\n      if (items[i].weight === \"\") {\n        error.weight = \"Required\";\n        check = true;\n      }\n      if (items[i].stock === \"\") {\n        error.stock = \"Required\";\n        check = true;\n      }\n      newErrors[i] = error;\n    }\n    setErrors(newErrors);\n    return check;\n  };\n\n  const onSubmit = () => {\n    if (!checkValue()) {\n      setItems(greedy(items, parseInt(weight.value)));\n    }\n    //console.log(greedy(items, parseInt(weight.value)));\n  };\n\n  return (\n    <div>\n      <Forms>\n        <Label for=\"weight\">Weight</Label>\n        <Input\n          style={{ width: \"100px\" }}\n          type=\"number\"\n          name=\"weight\"\n          id=\"weight\"\n          value={weight.value}\n          onChange={handleWeightChange}\n          onBlur={handleWeightBlur}\n          className={weight.errors && \"is-invalid\"}\n        />\n        {weight.errors && (\n          <span className=\"invalid-feedback\">{weight.errors}</span>\n        )}\n        {/* {errors.weight && \"Required\"} */}\n        <Table striped className=\"table-hover\">\n          <thead>\n            <tr>\n              <th style={{ width: \"500px\" }}>Name</th>\n              <th>Value</th>\n              <th>Weight</th>\n              <th>Stock</th>\n              <th>Qty</th>\n            </tr>\n          </thead>\n          <tbody>\n            {items.map((item, index) => (\n              <tr key={index}>\n                <td>\n                  <Input\n                    type=\"text\"\n                    id=\"name\"\n                    value={item.name}\n                    name=\"name\"\n                    onChange={handleChange(index)}\n                    onBlur={handleBlur(index)}\n                    className={errors[index].name && \"is-invalid\"}\n                  ></Input>\n                  {errors[index].name && (\n                    <span className=\"invalid-feedback\">\n                      {errors[index].name}\n                    </span>\n                  )}\n                </td>\n                <td>\n                  <Input\n                    type=\"text\"\n                    value={item.value}\n                    name=\"value\"\n                    onChange={handleChange(index)}\n                    onBlur={handleBlur(index)}\n                    className={errors[index].value && \"is-invalid\"}\n                  ></Input>\n                  {errors[index].value && (\n                    <span className=\"invalid-feedback\">\n                      {errors[index].value}\n                    </span>\n                  )}\n                </td>\n                <td>\n                  <Input\n                    type=\"text\"\n                    value={item.weight}\n                    name=\"weight\"\n                    onChange={handleChange(index)}\n                    onBlur={handleBlur(index)}\n                    className={errors[index].weight && \"is-invalid\"}\n                  ></Input>\n                  {errors[index].weight && (\n                    <span className=\"invalid-feedback\">\n                      {errors[index].weight}\n                    </span>\n                  )}\n                </td>\n                <td>\n                  <Input\n                    type=\"text\"\n                    value={item.stock}\n                    name=\"stock\"\n                    onChange={handleChange(index)}\n                    onBlur={handleBlur(index)}\n                    className={errors[index].stock && \"is-invalid\"}\n                  ></Input>\n                  {errors[index].stock && (\n                    <span className=\"invalid-feedback\">\n                      {errors[index].stock}\n                    </span>\n                  )}\n                </td>\n                <td>\n                  <Input\n                    type=\"text\"\n                    disabled\n                    value={item.qty}\n                    name=\"qty\"\n                    onChange={handleChange(index)}\n                  ></Input>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n        <Button onClick={() => addItem()} color=\"info\">\n          Add Item\n        </Button>{\" \"}\n        <Button onClick={onSubmit} color=\"success\">\n          Submit\n        </Button>\n      </Forms>\n    </div>\n  );\n}\n\nTableItem.propTypes = {};\n\nexport default TableItem;\n"]},"metadata":{},"sourceType":"module"}