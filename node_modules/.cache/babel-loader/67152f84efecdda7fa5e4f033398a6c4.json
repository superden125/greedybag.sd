{"ast":null,"code":"var _jsxFileName = \"/home/sd/HK1-2020-2021/NLCS/balo/demo2/src/components/Items/TableItem.js\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Input, Table, Form as Forms, Label } from \"reactstrap\";\nimport { greedy } from \"../../greedy\";\nimport InputFile from \"./InputFile\";\n\nfunction TableItem(props) {\n  const [items, setItems] = useState();\n  const [weight, setWeight] = useState({\n    value: \"\",\n    touched: false,\n    errors: \"\"\n  });\n  const [errors, setErrors] = useState([]);\n  const initItem = {\n    name: \"\",\n    value: \"\",\n    weight: \"\",\n    stock: \"\",\n    qty: \"\",\n    time: \"\"\n  };\n  useEffect(() => {\n    console.log(items);\n  }, [items]);\n\n  const addItem = () => {\n    setItems([...items, initItem]);\n    setErrors([...errors, initItem]);\n  };\n\n  const handleWeightChange = e => {\n    setWeight({ ...weight,\n      value: e.target.value,\n      errors: \"\"\n    });\n  };\n\n  const handleChange = (e, index) => {\n    let newArr = items.map((item, i) => {\n      if (index === i) {\n        return { ...item,\n          [e.target.name]: e.target.value\n        };\n      } else {\n        return item;\n      }\n    });\n    setItems(newArr);\n    let newErr = errors.map((error, i) => {\n      if (index === i) {\n        return { ...error,\n          [e.target.name]: \"\"\n        };\n      } else {\n        return error;\n      }\n    });\n    setErrors(newErr);\n  };\n\n  const handleBlur = index => e => {\n    if (!e.target.value) {\n      let newErr = errors.map((error, i) => {\n        if (index === i) {\n          return { ...error,\n            [e.target.name]: \"Required\"\n          };\n        } else {\n          return error;\n        }\n      });\n      setErrors(newErr);\n    } else {\n      let newErr = errors.map((error, i) => {\n        if (index === i && e.target.name !== \"name\" && e.target.value % 1 !== 0) {\n          return { ...error,\n            [e.target.name]: \"Value must be number\"\n          };\n        } else {\n          if (index === i && e.target.name !== \"name\" && parseInt(e.target.value) <= 0) {\n            return { ...error,\n              [e.target.name]: \"Value must > 0\"\n            };\n          } else {\n            return error;\n          }\n        }\n      });\n      setErrors(newErr);\n    }\n  };\n\n  const handleWeightBlur = e => {\n    setWeight({ ...weight,\n      touched: true\n    });\n\n    if (!e.target.value) {\n      setWeight({ ...weight,\n        errors: \"Required\"\n      });\n    } else {\n      if (e.target.value % 1 !== 0) setWeight({ ...weight,\n        errors: \"Value must be number\"\n      });else {\n        if (parseInt(e.target.value) <= 0) setWeight({ ...weight,\n          errors: \"Value must be > 0\"\n        });\n      }\n    }\n  };\n\n  const checkValue = () => {\n    //false: no error\n    //true: have error\n    let check = false;\n\n    if (weight.value === \"\") {\n      setWeight({ ...weight,\n        errors: \"Required\"\n      });\n      check = true;\n    }\n\n    const newErrors = [...errors];\n\n    for (var i = 0; i < items.length; i++) {\n      let error = { ...newErrors[i]\n      };\n\n      if (items[i].name === \"\") {\n        error.name = \"Required\";\n        check = true;\n      }\n\n      if (items[i].value === \"\") {\n        error.value = \"Required\";\n        check = true;\n      }\n\n      if (items[i].weight === \"\") {\n        error.weight = \"Required\";\n        check = true;\n      }\n\n      if (items[i].stock === \"\") {\n        error.stock = \"Required\";\n        check = true;\n      }\n\n      newErrors[i] = error;\n    }\n\n    setErrors(newErrors);\n    return check;\n  };\n\n  const onSubmit = () => {\n    if (!checkValue()) {\n      setItems(greedy(items, parseInt(weight.value)));\n    } //console.log(greedy(items, parseInt(weight.value)));\n\n  };\n\n  const clearItem = () => {\n    setItems([]);\n    setWeight({\n      value: \"\",\n      touched: false,\n      errors: \"\"\n    });\n  };\n\n  const setWeightFile = value => {\n    setWeight({ ...weight,\n      value: value,\n      errors: \"\"\n    }); //checkValue();\n  };\n\n  const setItemsFile = inputItems => {\n    setErrors([...errors, initItem]);\n    setItems([...items, inputItems]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Forms, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"weight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, \"Weight\"), /*#__PURE__*/React.createElement(Input, {\n    style: {\n      width: \"100px\"\n    },\n    type: \"number\",\n    name: \"weight\",\n    id: \"weight\",\n    value: weight.value,\n    onChange: handleWeightChange,\n    onBlur: handleWeightBlur,\n    className: weight.errors && \"is-invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }), weight.errors && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, weight.errors), /*#__PURE__*/React.createElement(InputFile, {\n    setWeightFile: setWeightFile,\n    setItemsFile: setItemsFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    className: \"table-hover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      width: \"500px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }, \"Value\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, \"Weight\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, \"Stock\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  }, \"Qty\"))), items && /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, items.map((item, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    id: \"name\",\n    value: item.name,\n    name: \"name\",\n    onChange: e => handleChange(e, index),\n    onBlur: handleBlur(index) // className={errors[index].name && \"is-invalid\"}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }), errors[index].name && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 23\n    }\n  }, errors[index].name)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    value: item.value,\n    name: \"value\" // type=\"number\"\n    ,\n    onChange: e => handleChange(e, index),\n    onBlur: handleBlur(index),\n    className: errors[index].value && \"is-invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 21\n    }\n  }), errors[index].value && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 23\n    }\n  }, errors[index].value)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    value: item.weight,\n    name: \"weight\",\n    onChange: e => handleChange(e, index),\n    onBlur: handleBlur(index),\n    className: errors[index].weight && \"is-invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 21\n    }\n  }), errors[index].weight && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 23\n    }\n  }, errors[index].weight)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    value: item.stock,\n    name: \"stock\",\n    onChange: e => handleChange(e, index),\n    onBlur: handleBlur(index),\n    className: errors[index].stock && \"is-invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 21\n    }\n  }), errors[index].stock && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 23\n    }\n  }, errors[index].stock)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    disabled: true,\n    value: item.qty,\n    name: \"qty\",\n    onChange: e => handleChange(e, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 21\n    }\n  })))))), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => clearItem(),\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }\n  }, \"Clear\"), \" \", /*#__PURE__*/React.createElement(Button, {\n    onClick: () => addItem(),\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }\n  }, \"Add Item\"), \" \", /*#__PURE__*/React.createElement(Button, {\n    onClick: onSubmit,\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }\n  }, \"Greedy\")));\n}\n\nTableItem.propTypes = {};\nexport default TableItem;","map":{"version":3,"sources":["/home/sd/HK1-2020-2021/NLCS/balo/demo2/src/components/Items/TableItem.js"],"names":["React","useEffect","useState","PropTypes","Button","Input","Table","Form","Forms","Label","greedy","InputFile","TableItem","props","items","setItems","weight","setWeight","value","touched","errors","setErrors","initItem","name","stock","qty","time","console","log","addItem","handleWeightChange","e","target","handleChange","index","newArr","map","item","i","newErr","error","handleBlur","parseInt","handleWeightBlur","checkValue","check","newErrors","length","onSubmit","clearItem","setWeightFile","setItemsFile","inputItems","width","propTypes"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Input, Table, Form as Forms, Label } from \"reactstrap\";\n\nimport { greedy } from \"../../greedy\";\nimport InputFile from \"./InputFile\";\n\nfunction TableItem(props) {\n  const [items, setItems] = useState();\n  const [weight, setWeight] = useState({\n    value: \"\",\n    touched: false,\n    errors: \"\",\n  });\n  const [errors, setErrors] = useState([]);\n\n  const initItem = {\n    name: \"\",\n    value: \"\",\n    weight: \"\",\n    stock: \"\",\n    qty: \"\",\n    time: \"\",\n  };\n\n  useEffect(() => {\n    console.log(items);\n  }, [items]);\n\n  const addItem = () => {\n    setItems([...items, initItem]);\n    setErrors([...errors, initItem]);\n  };\n\n  const handleWeightChange = (e) => {\n    setWeight({ ...weight, value: e.target.value, errors: \"\" });\n  };\n\n  const handleChange = (e, index) => {\n    let newArr = items.map((item, i) => {\n      if (index === i) {\n        return { ...item, [e.target.name]: e.target.value };\n      } else {\n        return item;\n      }\n    });\n    setItems(newArr);\n\n    let newErr = errors.map((error, i) => {\n      if (index === i) {\n        return { ...error, [e.target.name]: \"\" };\n      } else {\n        return error;\n      }\n    });\n    setErrors(newErr);\n  };\n\n  const handleBlur = (index) => (e) => {\n    if (!e.target.value) {\n      let newErr = errors.map((error, i) => {\n        if (index === i) {\n          return { ...error, [e.target.name]: \"Required\" };\n        } else {\n          return error;\n        }\n      });\n      setErrors(newErr);\n    } else {\n      let newErr = errors.map((error, i) => {\n        if (\n          index === i &&\n          e.target.name !== \"name\" &&\n          e.target.value % 1 !== 0\n        ) {\n          return { ...error, [e.target.name]: \"Value must be number\" };\n        } else {\n          if (\n            index === i &&\n            e.target.name !== \"name\" &&\n            parseInt(e.target.value) <= 0\n          ) {\n            return { ...error, [e.target.name]: \"Value must > 0\" };\n          } else {\n            return error;\n          }\n        }\n      });\n\n      setErrors(newErr);\n    }\n  };\n  const handleWeightBlur = (e) => {\n    setWeight({ ...weight, touched: true });\n    if (!e.target.value) {\n      setWeight({ ...weight, errors: \"Required\" });\n    } else {\n      if (e.target.value % 1 !== 0)\n        setWeight({ ...weight, errors: \"Value must be number\" });\n      else {\n        if (parseInt(e.target.value) <= 0)\n          setWeight({ ...weight, errors: \"Value must be > 0\" });\n      }\n    }\n  };\n\n  const checkValue = () => {\n    //false: no error\n    //true: have error\n    let check = false;\n    if (weight.value === \"\") {\n      setWeight({ ...weight, errors: \"Required\" });\n      check = true;\n    }\n    const newErrors = [...errors];\n\n    for (var i = 0; i < items.length; i++) {\n      let error = { ...newErrors[i] };\n      if (items[i].name === \"\") {\n        error.name = \"Required\";\n        check = true;\n      }\n      if (items[i].value === \"\") {\n        error.value = \"Required\";\n        check = true;\n      }\n      if (items[i].weight === \"\") {\n        error.weight = \"Required\";\n        check = true;\n      }\n      if (items[i].stock === \"\") {\n        error.stock = \"Required\";\n        check = true;\n      }\n      newErrors[i] = error;\n    }\n    setErrors(newErrors);\n    return check;\n  };\n\n  const onSubmit = () => {\n    if (!checkValue()) {\n      setItems(greedy(items, parseInt(weight.value)));\n    }\n    //console.log(greedy(items, parseInt(weight.value)));\n  };\n\n  const clearItem = () => {\n    setItems([]);\n    setWeight({\n      value: \"\",\n      touched: false,\n      errors: \"\",\n    });\n  };\n\n  const setWeightFile = (value) => {\n    setWeight({ ...weight, value: value, errors: \"\" });\n    //checkValue();\n  };\n\n  const setItemsFile = (inputItems) => {\n    setErrors([...errors, initItem]);\n    setItems([...items, inputItems]);\n  };\n\n  return (\n    <div>\n      <Forms>\n        <Label for=\"weight\">Weight</Label>\n        <Input\n          style={{ width: \"100px\" }}\n          type=\"number\"\n          name=\"weight\"\n          id=\"weight\"\n          value={weight.value}\n          onChange={handleWeightChange}\n          onBlur={handleWeightBlur}\n          className={weight.errors && \"is-invalid\"}\n        />\n        {weight.errors && (\n          <span className=\"invalid-feedback\">{weight.errors}</span>\n        )}\n        <InputFile setWeightFile={setWeightFile} setItemsFile={setItemsFile} />\n        <Table striped className=\"table-hover\">\n          <thead>\n            <tr>\n              <th style={{ width: \"500px\" }}>Name</th>\n              <th>Value</th>\n              <th>Weight</th>\n              <th>Stock</th>\n              <th>Qty</th>\n            </tr>\n          </thead>\n          {items && (\n            <tbody>\n              {items.map((item, index) => (\n                <tr key={index}>\n                  <td>\n                    <Input\n                      type=\"text\"\n                      id=\"name\"\n                      value={item.name}\n                      name=\"name\"\n                      onChange={(e) => handleChange(e, index)}\n                      onBlur={handleBlur(index)}\n                      // className={errors[index].name && \"is-invalid\"}\n                    ></Input>\n                    {errors[index].name && (\n                      <span className=\"invalid-feedback\">\n                        {errors[index].name}\n                      </span>\n                    )}\n                  </td>\n                  <td>\n                    <Input\n                      type=\"text\"\n                      value={item.value}\n                      name=\"value\"\n                      // type=\"number\"\n                      onChange={(e) => handleChange(e, index)}\n                      onBlur={handleBlur(index)}\n                      className={errors[index].value && \"is-invalid\"}\n                    ></Input>\n                    {errors[index].value && (\n                      <span className=\"invalid-feedback\">\n                        {errors[index].value}\n                      </span>\n                    )}\n                  </td>\n                  <td>\n                    <Input\n                      type=\"text\"\n                      value={item.weight}\n                      name=\"weight\"\n                      onChange={(e) => handleChange(e, index)}\n                      onBlur={handleBlur(index)}\n                      className={errors[index].weight && \"is-invalid\"}\n                    ></Input>\n                    {errors[index].weight && (\n                      <span className=\"invalid-feedback\">\n                        {errors[index].weight}\n                      </span>\n                    )}\n                  </td>\n                  <td>\n                    <Input\n                      type=\"text\"\n                      value={item.stock}\n                      name=\"stock\"\n                      onChange={(e) => handleChange(e, index)}\n                      onBlur={handleBlur(index)}\n                      className={errors[index].stock && \"is-invalid\"}\n                    ></Input>\n                    {errors[index].stock && (\n                      <span className=\"invalid-feedback\">\n                        {errors[index].stock}\n                      </span>\n                    )}\n                  </td>\n                  <td>\n                    <Input\n                      type=\"text\"\n                      disabled\n                      value={item.qty}\n                      name=\"qty\"\n                      onChange={(e) => handleChange(e, index)}\n                    ></Input>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          )}\n        </Table>\n        <Button onClick={() => clearItem()} color=\"warning\">\n          Clear\n        </Button>{\" \"}\n        <Button onClick={() => addItem()} color=\"info\">\n          Add Item\n        </Button>{\" \"}\n        <Button onClick={onSubmit} color=\"success\">\n          Greedy\n        </Button>\n      </Forms>\n    </div>\n  );\n}\n\nTableItem.propTypes = {};\n\nexport default TableItem;\n"]},"metadata":{},"sourceType":"module"}