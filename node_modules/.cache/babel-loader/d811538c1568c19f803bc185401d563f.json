{"ast":null,"code":"import _regeneratorRuntime from\"/home/sd/HK1-2020-2021/NLCS/balo/demo2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/sd/HK1-2020-2021/NLCS/balo/demo2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useRef}from\"react\";import classNames from\"classnames\";import*as XLSX from\"xlsx\";import*as FileSaver from\"file-saver\";import{FormGroup,Input,Label,Button}from\"reactstrap\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";export default function InputFile(props){var setFileName=props.setFileName,fileNames=props.fileNames,setIsLoading=props.setIsLoading,setInputFile=props.setInputFile,file=props.file,setFile=props.setFile,items=props.items,isGreedy=props.isGreedy,disabled=props.disabled;var fileUpload=useRef(null);var getExtFile=function getExtFile(filename){var last_dot=filename.lastIndexOf(\".\");return filename.slice(last_dot+1);};var readFileTxt=function readFileTxt(reader){var items=[];reader.onload=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var text,weight;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setIsLoading(true);console.log(\"load\");text=e.target.result.split(/\\r\\n|\\n/);weight=parseInt(text[0]);text.forEach(function(line,index){//console.log(line);\nif(index!==0){var cell=line.split(\" \");var stock=cell[2]%1===0?cell[2]:\"\";var name=\"\";if(stock!==\"\"){cell.slice(3).forEach(function(t){name+=t+\" \";});}else{cell.slice(2).forEach(function(t){name+=t+\" \";});}items.push({name:name.trim(),value:cell[0],weight:cell[1],stock:stock,qty:\"\",time:\"\"});}});console.log(items);setInputFile(weight,items);setIsLoading(false);case 8:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();//reader.readAsText(e.target.files[0]);\n};var readFileXlsx=function readFileXlsx(reader){var items=[];reader.onload=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e){var bstr,wb,wsname,ws,data,i;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setIsLoading(true);console.log(\"load\");/* Parse data */bstr=e.target.result;wb=XLSX.read(bstr,{type:\"binary\"});/* Get first worksheet */wsname=wb.SheetNames[0];ws=wb.Sheets[wsname];/* Convert array of arrays */data=XLSX.utils.sheet_to_json(ws,{header:1});/* Update state */console.log(data);for(i=1;i<data.length;i++){items.push({name:data[i][0].trim(),value:data[i][1],weight:data[i][2],stock:data[i][3]%1===0?data[i][3]:\"\",qty:\"\",time:\"\"});}setInputFile(0,items);setIsLoading(false);case 11:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};var readFile=function readFile(e){if(e!==undefined){if(e.target.files[0]!==undefined){e.preventDefault();var _items=[];var reader=new FileReader();var ext=getExtFile(e.target.files[0].name);setFileName(e.target.files[0].name);setFile(e.target.value);switch(ext){case\"txt\":readFileTxt(reader);break;case\"xlsx\":readFileXlsx(reader);break;}ext===\"xlsx\"&&reader.readAsBinaryString(e.target.files[0]);ext===\"txt\"&&reader.readAsText(e.target.files[0]);}}};var exportToCSV=function exportToCSV(csvData,fileName){var fileType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";var fileExtension=\".xlsx\";var ws=XLSX.utils.json_to_sheet(csvData);var wb={Sheets:{data:ws},SheetNames:[\"data\"]};var excelBuffer=XLSX.write(wb,{bookType:\"xlsx\",type:\"array\"});var data=new Blob([excelBuffer],{type:fileType});FileSaver.saveAs(data,fileName+fileExtension);};console.log(isGreedy);return/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(\"legend\",null,\"File\"),/*#__PURE__*/React.createElement(Label,{for:\"file\"// className=\"sd-file-choose btn btn-primary disabled\"\n,className:classNames(\"sd-file-choose sd-btn btn btn-primary\",{disabled:disabled})},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:\"file-upload\"}),\" Upload\"),/*#__PURE__*/React.createElement(Input,{type:\"file\",name:\"file\",id:\"file\",onChange:function onChange(e){return readFile(e);},style:{display:\"none\"},value:file,disabled:disabled,ref:fileUpload}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Label,null,fileNames),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Button,{className:\"sd-file-choose sd-btn btn btn-danger\",onClick:function onClick(){return exportToCSV(items,\"result\");},disabled:!isGreedy},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:\"file-download\"}),\"Export\"));}","map":{"version":3,"sources":["/home/sd/HK1-2020-2021/NLCS/balo/demo2/src/components/Items/InputFile.js"],"names":["React","useRef","classNames","XLSX","FileSaver","FormGroup","Input","Label","Button","FontAwesomeIcon","InputFile","props","setFileName","fileNames","setIsLoading","setInputFile","file","setFile","items","isGreedy","disabled","fileUpload","getExtFile","filename","last_dot","lastIndexOf","slice","readFileTxt","reader","onload","e","console","log","text","target","result","split","weight","parseInt","forEach","line","index","cell","stock","name","t","push","trim","value","qty","time","readFileXlsx","bstr","wb","read","type","wsname","SheetNames","ws","Sheets","data","utils","sheet_to_json","header","i","length","readFile","undefined","files","preventDefault","FileReader","ext","readAsBinaryString","readAsText","exportToCSV","csvData","fileName","fileType","fileExtension","json_to_sheet","excelBuffer","write","bookType","Blob","saveAs","display"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport classNames from \"classnames\";\nimport * as XLSX from \"xlsx\";\nimport * as FileSaver from \"file-saver\";\nimport { FormGroup, Input, Label, Button } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default function InputFile(props) {\n  const {\n    setFileName,\n    fileNames,\n    setIsLoading,\n    setInputFile,\n    file,\n    setFile,\n    items,\n    isGreedy,\n    disabled,\n  } = props;\n\n  const fileUpload = useRef(null);\n\n  const getExtFile = (filename) => {\n    let last_dot = filename.lastIndexOf(\".\");\n    return filename.slice(last_dot + 1);\n  };\n\n  const readFileTxt = (reader) => {\n    const items = [];\n\n    reader.onload = async (e) => {\n      setIsLoading(true);\n      console.log(\"load\");\n      const text = e.target.result.split(/\\r\\n|\\n/);\n      let weight = parseInt(text[0]);\n      text.forEach((line, index) => {\n        //console.log(line);\n        if (index !== 0) {\n          const cell = line.split(\" \");\n\n          const stock = cell[2] % 1 === 0 ? cell[2] : \"\";\n          let name = \"\";\n          if (stock !== \"\") {\n            cell.slice(3).forEach((t) => {\n              name += t + \" \";\n            });\n          } else {\n            cell.slice(2).forEach((t) => {\n              name += t + \" \";\n            });\n          }\n          items.push({\n            name: name.trim(),\n            value: cell[0],\n            weight: cell[1],\n            stock: stock,\n            qty: \"\",\n            time: \"\",\n          });\n        }\n      });\n      console.log(items);\n      setInputFile(weight, items);\n\n      setIsLoading(false);\n    };\n    //reader.readAsText(e.target.files[0]);\n  };\n\n  const readFileXlsx = (reader) => {\n    const items = [];\n    reader.onload = async (e) => {\n      setIsLoading(true);\n      console.log(\"load\");\n\n      /* Parse data */\n      const bstr = e.target.result;\n      const wb = XLSX.read(bstr, { type: \"binary\" });\n      /* Get first worksheet */\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      /* Convert array of arrays */\n      const data = XLSX.utils.sheet_to_json(ws, { header: 1 });\n      /* Update state */\n      console.log(data);\n\n      for (let i = 1; i < data.length; i++) {\n        items.push({\n          name: data[i][0].trim(),\n          value: data[i][1],\n          weight: data[i][2],\n          stock: data[i][3] % 1 === 0 ? data[i][3] : \"\",\n          qty: \"\",\n          time: \"\",\n        });\n      }\n      setInputFile(0, items);\n      setIsLoading(false);\n    };\n  };\n\n  const readFile = (e) => {\n    if (e !== undefined) {\n      if (e.target.files[0] !== undefined) {\n        e.preventDefault();\n        const items = [];\n        const reader = new FileReader();\n        let ext = getExtFile(e.target.files[0].name);\n        setFileName(e.target.files[0].name);\n        setFile(e.target.value);\n\n        switch (ext) {\n          case \"txt\":\n            readFileTxt(reader);\n            break;\n\n          case \"xlsx\":\n            readFileXlsx(reader);\n            break;\n        }\n\n        ext === \"xlsx\" && reader.readAsBinaryString(e.target.files[0]);\n        ext === \"txt\" && reader.readAsText(e.target.files[0]);\n      }\n    }\n  };\n\n  const exportToCSV = (csvData, fileName) => {\n    const fileType =\n      \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n    const fileExtension = \".xlsx\";\n    const ws = XLSX.utils.json_to_sheet(csvData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  console.log(isGreedy);\n\n  return (\n    <FormGroup>\n      <legend>File</legend>\n      <Label\n        for=\"file\"\n        // className=\"sd-file-choose btn btn-primary disabled\"\n        className={classNames(\"sd-file-choose sd-btn btn btn-primary\", {\n          disabled: disabled,\n        })}\n      >\n        <FontAwesomeIcon icon=\"file-upload\" /> Upload\n      </Label>\n\n      {/* <Button\n        className=\"sd-file-choose sd-btn btn btn-danger\"\n        onClick={() => console.log(fileUpload.current)}\n      >\n        <FontAwesomeIcon icon=\"file-download\" />\n        Upload\n      </Button> */}\n\n      <Input\n        type=\"file\"\n        name=\"file\"\n        id=\"file\"\n        onChange={(e) => readFile(e)}\n        style={{ display: \"none\" }}\n        value={file}\n        disabled={disabled}\n        ref={fileUpload}\n      />\n      <br></br>\n      <Label>{fileNames}</Label>\n      <br />\n      <Button\n        className=\"sd-file-choose sd-btn btn btn-danger\"\n        onClick={() => exportToCSV(items, \"result\")}\n        disabled={!isGreedy}\n      >\n        <FontAwesomeIcon icon=\"file-download\" />\n        Export\n      </Button>\n    </FormGroup>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}