{"version":3,"sources":["components/Items/InputFile.js","components/ModalType/ModalType1.js","components/Items/TypeBalo.js","components/Items/ButtonControl.js","components/Items/TableItem.js","greedy.js","components/Items/index.js","components/Headers/index.js","App.js","serviceWorker.js","index.js"],"names":["InputFile","props","setFileNames","fileNames","setIsLoading","setInputFile","disabled","FormGroup","Label","for","className","classNames","icon","Input","type","name","id","onChange","e","undefined","target","files","preventDefault","items","reader","FileReader","onload","a","text","result","split","weight","parseInt","forEach","line","index","cell","stock","slice","t","push","trim","value","qty","time","readAsText","readFile","style","display","ModalExample","title","content","useState","modal","setModal","toggle","onClick","Modal","isOpen","ModalHeader","ModalBody","ModalFooter","Button","color","TypeBalo","onTypeChange","tag","check","ModalType1","errors","ButtonControl","clearItem","addItem","onSubmit","TableItem","setItems","touched","setWeight","setErrors","setType","isGreedy","setIsGreedy","fileName","setFileName","isLoading","isHaveFile","setIsHaveFile","initItem","handleChange","newArr","map","item","i","newErr","error","handleBlur","checkType","console","log","length","Form","Row","form","Col","md","width","onBlur","inputWeight","inputItems","prev","setItemsFile","newErrors","checkValue","itemsList","sort","b","greedy1","greedy2","greedy3","Table","striped","typeName","enterAnimation","from","transform","opacity","to","leaveAnimation","key","newItems","splice","handleDeleteItem","reduce","totalWeight","Container","App","library","add","fab","faQuestionCircle","faFileUpload","faTrashAlt","faPlusCircle","faUtensils","Items","Boolean","window","location","hostname","match","ReactDOM","render","Fragment","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.327ef970.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, FormGroup, Input, Label } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport classNames from \"classnames\";\n\nexport default function InputFile(props) {\n  const {\n    setFileNames,\n    fileNames,\n    setIsLoading,\n    setInputFile,\n    disabled,\n  } = props;\n\n  const readFile = (e) => {\n    if (e !== undefined) {\n      if (e.target.files[0] !== undefined) {\n        e.preventDefault();\n        const items = [];\n        const reader = new FileReader();\n        setFileNames(e.target.files[0].name);\n        reader.onload = async (e) => {\n          setIsLoading(true);\n          const text = e.target.result.split(/\\r\\n|\\n/);\n          //setWeightFile(parseInt(text[0]));\n          let weight = parseInt(text[0]);\n          text.forEach((line, index) => {\n            //console.log(line);\n            if (index !== 0) {\n              const cell = line.split(\" \");\n\n              const stock = cell[2] % 1 === 0 ? cell[2] : \"\";\n              let name = \"\";\n              if (stock !== \"\") {\n                cell.slice(3).forEach((t) => {\n                  name += t + \" \";\n                });\n              } else {\n                cell.slice(2).forEach((t) => {\n                  name += t + \" \";\n                });\n              }\n              items.push({\n                name: name.trim(),\n                value: cell[0],\n                weight: cell[1],\n                stock: stock,\n                qty: \"\",\n                time: \"\",\n              });\n            }\n          });\n\n          //setItemsFile(items);\n          setInputFile(weight, items);\n          setIsLoading(false);\n        };\n\n        reader.readAsText(e.target.files[0]);\n      }\n    }\n  };\n\n  return (\n    <FormGroup>\n      <legend>File</legend>\n      <Label\n        for=\"file\"\n        // className=\"sd-file-choose btn btn-primary disabled\"\n        className={classNames(\"sd-file-choose btn btn-primary\", {\n          disabled: disabled,\n        })}\n      >\n        <FontAwesomeIcon icon=\"file-upload\" /> Upload\n      </Label>\n\n      <Input\n        type=\"file\"\n        name=\"file\"\n        id=\"file\"\n        onChange={(e) => readFile(e)}\n        style={{ display: \"none\" }}\n        disabled={disabled}\n      />\n      <br></br>\n      <Label>{fileNames}</Label>\n    </FormGroup>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst ModalExample = (props) => {\n  const { className, title, content } = props;\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  return (\n    <div>\n      <FontAwesomeIcon\n        icon=\"question-circle\"\n        onClick={toggle}\n        className=\"sd-icon-type\"\n      />\n\n      <Modal isOpen={modal} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>{title}</ModalHeader>\n        <ModalBody>{content}</ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={toggle}>\n            Nice!\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ModalExample;\n","import React from \"react\";\nimport { Button, FormGroup, Input, Label } from \"reactstrap\";\nimport ModalType1 from \"../ModalType/ModalType1\";\n\nexport default function TypeBalo(props) {\n  const { onTypeChange, type } = props;\n  return (\n    <FormGroup tag=\"fieldset\">\n      <legend>Type</legend>\n      <div className=\"form-type\">\n        <FormGroup check>\n          <Label check className=\"form-type-items\">\n            <Input\n              type=\"radio\"\n              name=\"radio1\"\n              value=\"1\"\n              onChange={(e) => onTypeChange(e)}\n            />{\" \"}\n            Balo1\n          </Label>\n          <ModalType1\n            title=\"Balo 1\"\n            content=\"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\"\n          />\n        </FormGroup>\n        <FormGroup check>\n          <Label check className=\"form-type-items\">\n            <Input\n              type=\"radio\"\n              name=\"radio1\"\n              value=\"2\"\n              onChange={(e) => onTypeChange(e)}\n            />{\" \"}\n            Balo2\n          </Label>\n          <ModalType1\n            title=\"Balo 2\"\n            content=\"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\"\n          />\n        </FormGroup>\n        <FormGroup check>\n          <Label check className=\"form-type-items\">\n            <Input\n              type=\"radio\"\n              name=\"radio1\"\n              value=\"3\"\n              onChange={(e) => onTypeChange(e)}\n            />{\" \"}\n            Balo3\n          </Label>\n          <ModalType1\n            title=\"Balo 3\"\n            content=\"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\"\n          />\n        </FormGroup>\n      </div>\n\n      <div className={type.errors && \"is-invalid\"}></div>\n      {type.errors && <span className=\"invalid-feedback\">{type.errors}</span>}\n    </FormGroup>\n  );\n}\n","import React from \"react\";\nimport { Button } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default function ButtonControl(props) {\n  const { clearItem, addItem, onSubmit } = props;\n  return (\n    <div className=\"button-control\">\n      <Button onClick={() => clearItem()} color=\"danger\" className=\"sd-btn\">\n        <FontAwesomeIcon icon=\"trash-alt\" /> Clear\n      </Button>{\" \"}\n      <Button onClick={() => addItem()} color=\"info\" className=\"sd-btn\">\n        <FontAwesomeIcon icon=\"plus-circle\" /> Add Item\n      </Button>{\" \"}\n      <Button onClick={onSubmit} color=\"success\" className=\"sd-btn\">\n        <FontAwesomeIcon icon=\"utensils\" /> Greedy\n      </Button>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Button,\n  Input,\n  Table,\n  Form as Forms,\n  Label,\n  FormGroup,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport FlipMove from \"react-flip-move\";\n\nimport { greedy1, greedy2, greedy3 } from \"../../greedy\";\nimport InputFile from \"./InputFile\";\nimport TypeBalo from \"./TypeBalo\";\nimport ButtonControl from \"./ButtonControl\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction TableItem(props) {\n  const [items, setItems] = useState([]);\n  const [weight, setWeight] = useState({\n    value: \"\",\n    touched: false,\n    errors: \"\",\n  });\n  const [errors, setErrors] = useState([]);\n  const [type, setType] = useState({\n    value: 0,\n    errors: \"\",\n  });\n\n  const [isGreedy, setIsGreedy] = useState(false);\n\n  const [fileName, setFileName] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isHaveFile, setIsHaveFile] = useState(false);\n\n  const initItem = {\n    name: \"\",\n    value: \"\",\n    weight: \"\",\n    stock: \"\",\n    qty: \"\",\n    time: \"\",\n  };\n\n  // useEffect(() => {\n  //   console.log(items);\n  // }, [isGreedy]);\n\n  const addItem = () => {\n    setItems([...items, initItem]);\n    setErrors([...errors, initItem]);\n  };\n\n  const handleWeightChange = (e) => {\n    setWeight({ ...weight, value: e.target.value, errors: \"\" });\n  };\n\n  const handleChange = (e, index) => {\n    let newArr = items.map((item, i) => {\n      if (index === i) {\n        return { ...item, [e.target.name]: e.target.value };\n      } else {\n        return item;\n      }\n    });\n    setItems(newArr);\n\n    let newErr = errors.map((error, i) => {\n      if (index === i) {\n        return { ...error, [e.target.name]: \"\" };\n      } else {\n        return error;\n      }\n    });\n    setErrors(newErr);\n  };\n\n  const handleBlur = (index) => (e) => {\n    if (!e.target.value) {\n      let newErr = errors.map((error, i) => {\n        if (index === i) {\n          return { ...error, [e.target.name]: \"Required\" };\n        } else {\n          return error;\n        }\n      });\n      setErrors(newErr);\n    } else {\n      let newErr = errors.map((error, i) => {\n        if (\n          index === i &&\n          e.target.name !== \"name\" &&\n          e.target.value % 1 !== 0\n        ) {\n          return { ...error, [e.target.name]: \"Value must be number\" };\n        } else {\n          if (\n            index === i &&\n            e.target.name !== \"name\" &&\n            parseInt(e.target.value) <= 0\n          ) {\n            return { ...error, [e.target.name]: \"Value must > 0\" };\n          } else {\n            return error;\n          }\n        }\n      });\n\n      setErrors(newErr);\n    }\n  };\n  const handleWeightBlur = (e) => {\n    setWeight({ ...weight, touched: true });\n    if (!e.target.value) {\n      setWeight({ ...weight, errors: \"Required\" });\n    } else {\n      if (e.target.value % 1 !== 0)\n        setWeight({ ...weight, errors: \"Value must be number\" });\n      else {\n        if (parseInt(e.target.value) <= 0)\n          setWeight({ ...weight, errors: \"Value must be > 0\" });\n      }\n    }\n  };\n\n  const checkValue = () => {\n    //false: no error\n    //true: have error\n    let check = false;\n    if (weight.value === \"\") {\n      setWeight({ ...weight, errors: \"Required\" });\n      check = true;\n    }\n    const newErrors = [...errors];\n\n    for (var i = 0; i < items.length; i++) {\n      let error = { ...newErrors[i] };\n      if (items[i].name === \"\") {\n        error.name = \"Required\";\n        check = true;\n      }\n      if (items[i].value === \"\") {\n        error.value = \"Required\";\n        check = true;\n      }\n      if (items[i].weight === \"\") {\n        error.weight = \"Required\";\n        check = true;\n      }\n      if (items[i].stock === \"\" && type.value === \"2\") {\n        error.stock = \"Required\";\n        check = true;\n      }\n      if (type.value !== \"2\") {\n        error.stock = \"\";\n      }\n      newErrors[i] = error;\n    }\n    setErrors(newErrors);\n    return check;\n  };\n\n  const onSubmit = () => {\n    if (!checkType() && !checkValue()) {\n      switch (type.value) {\n        case \"1\":\n          setItems(greedy1(items, parseInt(weight.value)));\n          setIsGreedy(true);\n          return;\n        case \"2\":\n          setItems(greedy2(items, parseInt(weight.value)));\n          setIsGreedy(true);\n          return;\n        case \"3\":\n          setItems(greedy3(items, parseInt(weight.value)));\n          setIsGreedy(true);\n          return;\n        default:\n          return;\n      }\n    }\n  };\n\n  const clearItem = () => {\n    setItems([]);\n    setErrors([]);\n    setWeight({\n      value: \"\",\n      touched: false,\n      errors: \"\",\n    });\n    setType({ ...type, value: 0 });\n    setIsGreedy(false);\n    setFileName();\n    setIsHaveFile(false);\n  };\n\n  const setItemsFile = (inputItems) => {\n    setItems(inputItems);\n    setErrors([]);\n\n    inputItems.forEach((item) => {\n      setErrors((prev) => [...prev, initItem]);\n      //setItems((prev) => [...prev, item]);\n    });\n  };\n\n  const setInputFile = (inputWeight, inputItems) => {\n    clearItem();\n    setWeight({ ...weight, value: inputWeight, errors: \"\" });\n    setItemsFile(inputItems);\n    setIsHaveFile(true);\n  };\n\n  const onTypeChange = (e) => {\n    setType({\n      value: e.target.value,\n      errors: \"\",\n    });\n    // let n = errors.length;\n    // setErrors([]);\n    // for (var i = 0; i < n; i++) {\n    //   setErrors([...errors, initItem]);\n    // }\n  };\n\n  const checkType = () => {\n    //false no errors\n    //true have errors\n    if (type.value === 0) {\n      setType({ ...type, errors: \"Required\" });\n      return true;\n    }\n    return false;\n  };\n\n  const handleDeleteItem = (index) => {\n    const newItems = [...items];\n    newItems.splice(index, 1);\n    setItems(newItems);\n\n    const newErrors = [...errors];\n    newErrors.splice(index, 1);\n    setErrors(newErrors);\n  };\n\n  const setFileNames = (name) => {\n    setFileName(name);\n  };\n\n  const notVisibleState = {\n    transform: \"translateX(-100%)\",\n    opacity: 0.1,\n  };\n\n  const leaveOut = {\n    transform: \"translateX(100%)\",\n    opacity: 0.1,\n  };\n\n  const leaveState = {\n    opacity: 0,\n  };\n\n  console.log(\"re-render\", isLoading);\n  console.log(items.length > 0 && \"ok\");\n  return (\n    <div>\n      <Forms>\n        <Row form>\n          <Col md={3} className=\"offset-md-2\">\n            <div className=\"sd-fade-left-right\">\n              <FormGroup>\n                <legend>Weight</legend>\n                <Input\n                  style={{ width: \"100px\" }}\n                  type=\"number\"\n                  name=\"weight\"\n                  id=\"weight\"\n                  value={weight.value}\n                  onChange={handleWeightChange}\n                  onBlur={handleWeightBlur}\n                  className={weight.errors && \"is-invalid\"}\n                />\n                {weight.errors && (\n                  <span className=\"invalid-feedback\">{weight.errors}</span>\n                )}\n              </FormGroup>\n            </div>\n          </Col>\n          <Col md={3}>\n            <div className=\"sd-fade-left-right\">\n              <TypeBalo onTypeChange={onTypeChange} type={type} />\n            </div>\n          </Col>\n          <Col md={3}>\n            <div className=\"sd-fade-left-right\">\n              <InputFile\n                setFileNames={setFileNames}\n                fileNames={fileName}\n                setIsLoading={setIsLoading}\n                setInputFile={setInputFile}\n                disabled={isHaveFile}\n              />\n            </div>\n          </Col>\n        </Row>\n        <ButtonControl\n          clearItem={clearItem}\n          addItem={addItem}\n          onSubmit={onSubmit}\n        />\n        <h2 className=\"text-center sd-fade-up-down\">Table Items</h2>\n\n        <Table striped className=\"table-hover sd-fade-up-down\">\n          <thead>\n            <tr>\n              <th style={{ width: \"500px\" }}>Name</th>\n              <th>Value</th>\n              <th>Weight</th>\n              <th>Stock</th>\n              <th>Qty</th>\n              <th></th>\n            </tr>\n          </thead>\n          {/* <tbody> */}\n          <FlipMove\n            typeName=\"tbody\"\n            enterAnimation={{\n              from: notVisibleState,\n              to: {},\n            }}\n            leaveAnimation={{\n              from: {},\n              to: leaveOut,\n            }}\n          >\n            {items.length > 0 &&\n              !isLoading &&\n              items.map((item, index) => (\n                <tr key={index}>\n                  <td>\n                    <Input\n                      type=\"text\"\n                      id=\"name\"\n                      value={item.name ? item.name : null}\n                      name=\"name\"\n                      onChange={(e) => handleChange(e, index)}\n                      onBlur={handleBlur(index)}\n                      className={\n                        errors[index] && errors[index].name && \"is-invalid\"\n                      }\n                    ></Input>\n                    {errors[index].name && (\n                      <span className=\"invalid-feedback\">\n                        {errors[index].name}\n                      </span>\n                    )}\n                  </td>\n                  <td>\n                    <Input\n                      type=\"text\"\n                      value={item.value}\n                      name=\"value\"\n                      // type=\"number\"\n                      onChange={(e) => handleChange(e, index)}\n                      onBlur={handleBlur(index)}\n                      className={errors[index].value && \"is-invalid\"}\n                    ></Input>\n                    {errors[index].value && (\n                      <span className=\"invalid-feedback\">\n                        {errors[index].value}\n                      </span>\n                    )}\n                  </td>\n                  <td>\n                    <Input\n                      type=\"text\"\n                      value={item.weight}\n                      name=\"weight\"\n                      onChange={(e) => handleChange(e, index)}\n                      onBlur={handleBlur(index)}\n                      className={errors[index].weight && \"is-invalid\"}\n                    ></Input>\n                    {errors[index].weight && (\n                      <span className=\"invalid-feedback\">\n                        {errors[index].weight}\n                      </span>\n                    )}\n                  </td>\n                  <td>\n                    <Input\n                      type=\"text\"\n                      value={item.stock}\n                      name=\"stock\"\n                      onChange={(e) => handleChange(e, index)}\n                      onBlur={handleBlur(index)}\n                      className={errors[index].stock && \"is-invalid\"}\n                      disabled={type.value !== \"2\" ? true : false}\n                    ></Input>\n                    {errors[index].stock && (\n                      <span className=\"invalid-feedback\">\n                        {errors[index].stock}\n                      </span>\n                    )}\n                  </td>\n                  <td>\n                    <Input\n                      type=\"text\"\n                      disabled\n                      value={item.qty}\n                      name=\"qty\"\n                      onChange={(e) => handleChange(e, index)}\n                    ></Input>\n                  </td>\n                  <td>\n                    <FontAwesomeIcon\n                      icon=\"trash-alt\"\n                      className=\"icon-trash\"\n                      onClick={() => handleDeleteItem(index)}\n                    />\n                  </td>\n                </tr>\n              ))}\n            {isGreedy && (\n              <tr className=\"sd-total-row\">\n                <td className=\"sd-total-title\">Total:</td>\n                <td>\n                  {items.reduce(\n                    (totalWeight, item) => totalWeight + item.qty * item.value,\n                    0\n                  )}\n                </td>\n\n                <td>\n                  {items.reduce(\n                    (totalWeight, item) => totalWeight + item.qty * item.weight,\n                    0\n                  )}\n                </td>\n              </tr>\n            )}\n          </FlipMove>\n          {/* </tbody> */}\n        </Table>\n      </Forms>\n    </div>\n  );\n}\n\nTableItem.propTypes = {};\n\nexport default TableItem;\n","function sort(items) {\n  console.log(items);\n  for (var i = 0; i < items.length - 2; i++) {\n    for (var j = items.length - 1; j >= i + 1; j--) {\n      var t1 = items[j].value / items[j].weight;\n      var t2 = items[j - 1].value / items[j - 1].weight;\n\n      if (t1 > t2) {\n        [items[j], items[j - 1]] = [items[j - 1], items[j]];\n      }\n    }\n  }\n  console.log(items);\n}\n\nfunction greedy1(itemsList, weight) {\n  //sort(items);\n\n  const items = itemsList.slice().sort((a, b) => {\n    return b.value / b.weight - a.value / a.weight;\n  });\n\n  items.forEach((item) => {\n    item.qty = parseInt(weight / item.weight);\n    weight -= item.qty * item.weight;\n  });\n  return items;\n}\n\nfunction greedy2(itemsList, weight) {\n  //sort(items);\n\n  const items = itemsList.slice().sort((a, b) => {\n    return b.value / b.weight - a.value / a.weight;\n  });\n\n  items.forEach((item) => {\n    item.qty = parseInt(weight / item.weight);\n    if (item.qty > item.stock) {\n      item.qty = item.stock;\n    }\n    weight -= item.qty * item.weight;\n  });\n  return items;\n}\n\nfunction greedy3(itemsList, weight) {\n  //sort(items);\n\n  const items = itemsList.slice().sort((a, b) => {\n    return b.value / b.weight - a.value / a.weight;\n  });\n\n  items.forEach((item) => {\n    item.qty = parseInt(weight / item.weight);\n    if (item.qty > 1) {\n      item.qty = 1;\n    }\n    weight -= item.qty * item.weight;\n  });\n  return items;\n}\n\nexport { greedy1, greedy2, greedy3 };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableItem from \"./TableItem\";\nimport { Container } from \"reactstrap\";\n\nfunction index(props) {\n  return (\n    <Container>\n      <TableItem />\n    </Container>\n  );\n}\n\nindex.propTypes = {};\n\nexport default index;\n","import React from \"react\";\n\nexport default function index() {\n  return (\n    <header>\n      <h1 className=\"sd-header\">Greedy Algorithm Web Applications</h1>\n    </header>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport {\n  faQuestionCircle,\n  faFileUpload,\n  faTrashAlt,\n  faPlusCircle,\n  faUtensils,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Items from \"./components/Items\";\nimport Headers from \"./components/Headers\";\n\nfunction App() {\n  library.add(\n    fab,\n    faQuestionCircle,\n    faFileUpload,\n    faTrashAlt,\n    faPlusCircle,\n    faUtensils,\n    faTrashAlt\n  );\n  return (\n    <div>\n      <Headers />\n      <Items />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}